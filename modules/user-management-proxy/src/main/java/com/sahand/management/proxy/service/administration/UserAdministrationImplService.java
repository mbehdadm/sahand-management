
package com.sahand.management.proxy.service.administration;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3.1-hudson-417-SNAPSHOT
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "UserAdministrationImplService", targetNamespace = "http://service.administration.industrial.sahand.com/", wsdlLocation = "http://192.168.7.168:8181/industrial-product-0.0.1-SNAPSHOT-03administration-service-0.0.1-SNAPSHOT/UserAdministrationImpl?wsdl")
public class UserAdministrationImplService
    extends Service
{

    private final static URL USERADMINISTRATIONIMPLSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(UserAdministrationImplService.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = UserAdministrationImplService.class.getResource(".");
            url = new URL(baseUrl, "http://192.168.7.168:8181/industrial-product-0.0.1-SNAPSHOT-03administration-service-0.0.1-SNAPSHOT/UserAdministrationImpl?wsdl");
            
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'http://192.168.7.168:8181/industrial-product-0.0.1-SNAPSHOT-03administration-service-0.0.1-SNAPSHOT/UserAdministrationImpl?wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        USERADMINISTRATIONIMPLSERVICE_WSDL_LOCATION = url;
    }

    public UserAdministrationImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public UserAdministrationImplService() {
        super(USERADMINISTRATIONIMPLSERVICE_WSDL_LOCATION, new QName("http://service.administration.industrial.sahand.com/", "UserAdministrationImplService"));
    }

    /**
     * 
     * @return
     *     returns UserAdministrationImpl
     */
    @WebEndpoint(name = "UserAdministrationImplPort")
    public UserAdministrationImpl getUserAdministrationImplPort() {
        return super.getPort(new QName("http://service.administration.industrial.sahand.com/", "UserAdministrationImplPort"), UserAdministrationImpl.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UserAdministrationImpl
     */
    @WebEndpoint(name = "UserAdministrationImplPort")
    public UserAdministrationImpl getUserAdministrationImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://service.administration.industrial.sahand.com/", "UserAdministrationImplPort"), UserAdministrationImpl.class, features);
    }

}
